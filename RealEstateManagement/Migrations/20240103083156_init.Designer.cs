// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateManagement.Models;

#nullable disable

namespace RealEstateManagement.Migrations
{
    [DbContext(typeof(EstateContext))]
    [Migration("20240103083156_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstateManagement.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<int>("NumberOfUnits")
                        .HasColumnType("int");

                    b.Property<string>("P_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.HasIndex("TenantId");

                    b.ToTable("AssetTble");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerId"));

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Own_ContactInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("OwnerId");

                    b.HasIndex("AssetId");

                    b.HasIndex("TenantId");

                    b.ToTable("OwnerTble");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenantId"));

                    b.Property<DateTime>("LeaseStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("T_ContactInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId");

                    b.ToTable("TenantTble");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Asset", b =>
                {
                    b.HasOne("RealEstateManagement.Models.Tenant", null)
                        .WithMany("AssetList")
                        .HasForeignKey("TenantId");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Owner", b =>
                {
                    b.HasOne("RealEstateManagement.Models.Asset", "GetAsset")
                        .WithMany("OwnerList")
                        .HasForeignKey("AssetId");

                    b.HasOne("RealEstateManagement.Models.Tenant", "GetTenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("GetAsset");

                    b.Navigation("GetTenant");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Asset", b =>
                {
                    b.Navigation("OwnerList");
                });

            modelBuilder.Entity("RealEstateManagement.Models.Tenant", b =>
                {
                    b.Navigation("AssetList");
                });
#pragma warning restore 612, 618
        }
    }
}
